package handler

import (
	"fmt"
	"html"
	"net/http"
	"strings"
)

// standardBanner contient la dÃ©finition du banner standard
var standardBanner = map[rune][]string{
	' ': {
		"      ",
		"      ",
		"      ",
		"      ",
		"      ",
		"      ",
		"      ",
		"      ",
	},
	'!': {
		" _  ",
		"| | ",
		"| | ",
		"| | ",
		"|_| ",
		"(_) ",
		"    ",
		"    ",
	},
	'"': {
		" _ _  ",
		"( | ) ",
		" V V  ",
		"      ",
		"      ",
		"      ",
		"      ",
		"      ",
	},
	'#': {
		"   _  _    ",
		" _| || |_  ",
		"|_  __  _| ",
		" _| || |_  ",
		"|_  __  _| ",
		"  |_||_|   ",
		"           ",
		"           ",
	},
	'$': {
		"  _  ",
		" | | ",
		"/ __)",
		"\\__ \\",
		"(   /",
		" |_| ",
		"     ",
		"     ",
	},
	'%': {
		" _     ",
		"(_)  _ ",
		"   _| |",
		" _|  | ",
		"|_   (_)",
		"  |_|  ",
		"       ",
		"       ",
	},
	'&': {
		"         ",
		"  ___    ",
		" ( _ )   ",
		" / _ \\/\\ ",
		"| (_>  < ",
		" \\___/\\/ ",
		"         ",
		"         ",
	},
	'\'': {
		" _ ",
		"( )",
		"|/ ",
		"   ",
		"   ",
		"   ",
		"   ",
		"   ",
	},
	'(': {
		"  __ ",
		" /  )",
		"| /  ",
		"| \\  ",
		"|  \\ ",
		" \\__)",
		"     ",
		"     ",
	},
	')': {
		"__   ",
		"( \\  ",
		" \\ | ",
		"  /| ",
		" / | ",
		"(__/ ",
		"     ",
		"     ",
	},
	'*': {
		"       ",
		"__/\\__ ",
		"\\    /",
		"/_  _\\",
		"  \\/  ",
		"      ",
		"      ",
		"      ",
	},
	'+': {
		"       ",
		"   _   ",
		" _| |_ ",
		"|_   _|",
		"  |_|  ",
		"       ",
		"       ",
		"       ",
	},
	',': {
		"   ",
		"   ",
		"   ",
		"   ",
		" _ ",
		"( )",
		"|/ ",
		"   ",
	},
	'-': {
		"       ",
		"       ",
		" _____ ",
		"|_____|",
		"       ",
		"       ",
		"       ",
		"       ",
	},
	'.': {
		"   ",
		"   ",
		"   ",
		"   ",
		" _ ",
		"(_)",
		"   ",
		"   ",
	},
	'/': {
		"     __",
		"    / /",
		"   / / ",
		"  / /  ",
		" / /   ",
		"/_/    ",
		"       ",
		"       ",
	},
	'0': {
		" ___  ",
		"/   \\ ",
		"| | | |",
		"| | | |",
		"| |_| |",
		" \\___/ ",
		"       ",
		"       ",
	},
	'1': {
		" _ ",
		"/ |",
		"| |",
		"| |",
		"| |",
		"|_|",
		"   ",
		"   ",
	},
	'2': {
		" ____  ",
		"|___ \\ ",
		"  __) |",
		" / __/ ",
		"|_____|",
		"       ",
		"       ",
		"       ",
	},
	'3': {
		" _____ ",
		"|___ / ",
		"  |_ \\ ",
		" ___) |",
		"|____/ ",
		"       ",
		"       ",
		"       ",
	},
	'4': {
		" _  _   ",
		"| || |  ",
		"| || |_ ",
		"|__   _|",
		"   |_|  ",
		"        ",
		"        ",
		"        ",
	},
	'5': {
		" _____ ",
		"| ____|",
		"|___ \\ ",
		" ___) |",
		"|____/ ",
		"       ",
		"       ",
		"       ",
	},
	'6': {
		"  __   ",
		" / /_  ",
		"| '_ \\ ",
		"| (_) |",
		" \\___/ ",
		"       ",
		"       ",
		"       ",
	},
	'7': {
		" _____ ",
		"|___  |",
		"   / / ",
		"  / /  ",
		" /_/   ",
		"       ",
		"       ",
		"       ",
	},
	'8': {
		" ___  ",
		"( _ ) ",
		" / _ \\",
		"| (_) |",
		" \\___/ ",
		"       ",
		"       ",
		"       ",
	},
	'9': {
		" ___  ",
		"/ _ \\ ",
		"\\_, / ",
		"  / /  ",
		" /_/   ",
		"       ",
		"       ",
		"       ",
	},
	':': {
		"   ",
		" _ ",
		"(_)",
		"   ",
		" _ ",
		"(_)",
		"   ",
		"   ",
	},
	';': {
		"   ",
		" _ ",
		"(_)",
		"   ",
		" _ ",
		"( )",
		"|/ ",
		"   ",
	},
	'<': {
		"   __",
		"  / /",
		" / / ",
		"< <  ",
		" \\ \\ ",
		"  \\_\\",
		"     ",
		"     ",
	},
	'=': {
		"       ",
		" _____ ",
		"|_____|",
		"|_____|",
		"       ",
		"       ",
		"       ",
		"       ",
	},
	'>': {
		"__   ",
		"\\ \\  ",
		" \\ \\ ",
		"  > >",
		" / / ",
		"/_/  ",
		"     ",
		"     ",
	},
	'?': {
		" ___  ",
		"|__ \\ ",
		"  / / ",
		" |_|  ",
		" (_)  ",
		"      ",
		"      ",
		"      ",
	},
	'@': {
		"   ____   ",
		"  / __ \\  ",
		" / / _` | ",
		"| | (_| | ",
		" \\ \\__,_| ",
		"  \\____/  ",
		"          ",
		"          ",
	},
	'A': {
		"           ",
		"    /\\     ",
		"   /  \\    ",
		"  / /\\ \\   ",
		" / ____ \\  ",
		"/_/    \\_\\ ",
		"           ",
		"           ",
	},
	'B': {
		" ____  ",
		"|  _ \\ ",
		"| |_) |",
		"|  _ < ",
		"| |_) |",
		"|____/ ",
		"       ",
		"       ",
	},
	'C': {
		"  _____ ",
		" / ____|",
		"| |     ",
		"| |     ",
		"| |____ ",
		" \\_____|",
		"        ",
		"        ",
	},
	'D': {
		" _____  ",
		"|  __ \\ ",
		"| |  | |",
		"| |  | |",
		"| |__| |",
		"|_____/ ",
		"        ",
		"        ",
	},
	'E': {
		" ______ ",
		"|  ____|",
		"| |__   ",
		"|  __|  ",
		"| |____ ",
		"|______|",
		"        ",
		"        ",
	},
	'F': {
		" ______ ",
		"|  ____|",
		"| |__   ",
		"|  __|  ",
		"| |     ",
		"|_|     ",
		"        ",
		"        ",
	},
	'G': {
		"  _____ ",
		" / ____|",
		"| |  __ ",
		"| | |_ |",
		"| |__| |",
		" \\_____|",
		"        ",
		"        ",
	},
	'H': {
		" _    _ ",
		"| |  | |",
		"| |__| |",
		"|  __  |",
		"| |  | |",
		"|_|  |_|",
		"        ",
		"        ",
	},
	'I': {
		" _____ ",
		"|_   _|",
		"  | |  ",
		"  | |  ",
		" _| |_ ",
		"|_____|",
		"       ",
		"       ",
	},
	'J': {
		"      _ ",
		"     | |",
		"     | |",
		" _   | |",
		"| |__| |",
		" \\____/ ",
		"        ",
		"        ",
	},
	'K': {
		" _  __ ",
		"| |/ / ",
		"| ' /  ",
		"|  <   ",
		"| . \\  ",
		"|_|\\_\\ ",
		"       ",
		"       ",
	},
	'L': {
		" _      ",
		"| |     ",
		"| |     ",
		"| |     ",
		"| |____ ",
		"|______|",
		"        ",
		"        ",
	},
	'M': {
		" __  __ ",
		"|  \\/  |",
		"| |\\/| |",
		"| |  | |",
		"| |  | |",
		"|_|  |_|",
		"        ",
		"        ",
	},
	'N': {
		" _   _ ",
		"| \\ | |",
		"|  \\| |",
		"| . ` |",
		"| |\\  |",
		"|_| \\_|",
		"       ",
		"       ",
	},
	'O': {
		"  ___  ",
		" / _ \\ ",
		"| | | |",
		"| |_| |",
		" \\___/ ",
		"       ",
		"       ",
		"       ",
	},
	'P': {
		" ____  ",
		"|  _ \\ ",
		"| |_) |",
		"|  __/ ",
		"| |    ",
		"|_|    ",
		"       ",
		"       ",
	},
	'Q': {
		"  ___  ",
		" / _ \\ ",
		"| | | |",
		"| |_| |",
		" \\__\\_\\",
		"       ",
		"       ",
		"       ",
	},
	'R': {
		" ____  ",
		"|  _ \\ ",
		"| |_) |",
		"|  _ < ",
		"| |_) |",
		"|____/ ",
		"       ",
		"       ",
	},
	'S': {
		" _____ ",
		"/ ____|",
		"\\___ \\ ",
		" ___) |",
		"|____/ ",
		"       ",
		"       ",
		"       ",
	},
	'T': {
		" _____ ",
		"|_   _|",
		"  | |  ",
		"  | |  ",
		"  | |  ",
		"  |_|  ",
		"       ",
		"       ",
	},
	'U': {
		" _    _ ",
		"| |  | |",
		"| |  | |",
		"| |  | |",
		"| |__| |",
		" \\____/ ",
		"        ",
		"        ",
	},
	'V': {
		" _    _ ",
		"| |  | |",
		"| |  | |",
		"| |  | |",
		" \\  / ",
		"  \\/   ",
		"       ",
		"       ",
	},
	'W': {
		" _    _ ",
		"| |  | |",
		"| |  | |",
		"| |/\\| |",
		"|  /\\  |",
		"|_/  \\_|",
		"        ",
		"        ",
	},
	'X': {
		"__  __",
		"\\ \\/ /",
		" \\  / ",
		" /  \\ ",
		"/ /\\ \\",
		"_/  \\_",
		"      ",
		"      ",
	},
	'Y': {
		"__   __",
		"\\ \\ / /",
		" \\ V / ",
		"  | |  ",
		"  | |  ",
		"  |_|  ",
		"       ",
		"       ",
	},
	'Z': {
		" ______",
		"|___  /",
		"   / / ",
		"  / /  ",
		" / /__ ",
		"/_____|",
		"       ",
		"       ",
	},
	'[': {
		" ___ ",
		"|  _|",
		"| |  ",
		"| |  ",
		"| |  ",
		"| |_ ",
		"|___|",
		"     ",
	},
	'\\': {
		"__     ",
		"\\ \\    ",
		" \\ \\   ",
		"  \\ \\  ",
		"   \\ \\ ",
		"    \\_\\",
		"       ",
		"       ",
	},
	']': {
		" ___ ",
		"|_  |",
		"  | |",
		"  | |",
		"  | |",
		" _| |",
		"|___|",
		"     ",
	},
	'^': {
		" /\\ ",
		"|  |",
		"    ",
		"    ",
		"    ",
		"    ",
		"    ",
		"    ",
	},
	'_': {
		"        ",
		"        ",
		"        ",
		"        ",
		"        ",
		" ______ ",
		"|______|",
		"        ",
	},
	'`': {
		" _ ",
		"( )",
		" \\|",
		"   ",
		"   ",
		"   ",
		"   ",
		"   ",
	},
	'a': {
		"       ",
		"  __ _ ",
		" / _` |",
		"| (_| |",
		" \\__,_|",
		"       ",
		"       ",
		"       ",
	},
	'b': {
		" _     ",
		"| |    ",
		"| |__  ",
		"| '_ \\ ",
		"| |_) |",
		"|_.__/ ",
		"       ",
		"       ",
	},
	'c': {
		"      ",
		"  ___ ",
		" / __|",
		"| (__ ",
		" \\___|",
		"      ",
		"      ",
		"      ",
	},
	'd': {
		"     _ ",
		"    | |",
		"  __| |",
		" / _` |",
		"| (_| |",
		" \\__,_|",
		"       ",
		"       ",
	},
	'e': {
		"      ",
		"  ___ ",
		" / _ \\",
		"|  __/",
		" \\___|",
		"      ",
		"      ",
		"      ",
	},
	'f': {
		"  __ ",
		" / _|",
		"| |_ ",
		"|  _|",
		"| |  ",
		"|_|  ",
		"     ",
		"     ",
	},
	'g': {
		"       ",
		"  __ _ ",
		" / _` |",
		"| (_| |",
		" \\__, |",
		" |___/ ",
		"       ",
		"       ",
	},
	'h': {
		" _     ",
		"| |    ",
		"| |__  ",
		"| '_ \\ ",
		"| | | |",
		"|_| |_|",
		"       ",
		"       ",
	},
	'i': {
		" _ ",
		"(_)",
		" _ ",
		"| |",
		"| |",
		"|_|",
		"   ",
		"   ",
	},
	'j': {
		"   _ ",
		"  (_)",
		"   _ ",
		"  | |",
		"  | |",
		" _/ |",
		"|__/ ",
		"     ",
	},
	'k': {
		" _    ",
		"| |   ",
		"| | __",
		"| |/ /",
		"|   < ",
		"|_|\\_\\",
		"      ",
		"      ",
	},
	'l': {
		" _ ",
		"| |",
		"| |",
		"| |",
		"| |",
		"|_|",
		"   ",
		"   ",
	},
	'm': {
		"           ",
		" _ __ ___  ",
		"| '_ ` _ \\ ",
		"| | | | | |",
		"|_| |_| |_|",
		"           ",
		"           ",
		"           ",
	},
	'n': {
		"       ",
		" _ __  ",
		"| '_ \\ ",
		"| | | |",
		"|_| |_|",
		"       ",
		"       ",
		"       ",
	},
	'o': {
		"      ",
		"  ___ ",
		" / _ \\",
		"| (_) |",
		" \\___/ ",
		"       ",
		"       ",
		"       ",
	},
	'p': {
		"       ",
		" _ __  ",
		"| '_ \\ ",
		"| |_) |",
		"| .__/ ",
		"|_|    ",
		"       ",
		"       ",
	},
	'q': {
		"       ",
		"  __ _ ",
		" / _` |",
		"| (_| |",
		" \\__, |",
		"    |_|",
		"       ",
		"       ",
	},
	'r': {
		"      ",
		" _ __ ",
		"| '__|",
		"| |   ",
		"|_|   ",
		"      ",
		"      ",
		"      ",
	},
	's': {
		"     ",
		" ___ ",
		"/ __|",
		"\\__ \\",
		"|___/",
		"     ",
		"     ",
		"     ",
	},
	't': {
		" _   ",
		"| |  ",
		"| |_ ",
		"| __|",
		"| |_ ",
		" \\__|",
		"     ",
		"     ",
	},
	'u': {
		"       ",
		" _   _ ",
		"| | | |",
		"| |_| |",
		" \\__,_|",
		"       ",
		"       ",
		"       ",
	},
	'v': {
		"       ",
		"__   __",
		"\\ \\ / /",
		" \\ V / ",
		"  \\_/  ",
		"       ",
		"       ",
		"       ",
	},
	'w': {
		"          ",
		"__      __",
		"\\ \\    / /",
		" \\ \\/\\/ / ",
		"  \\_/\\_/  ",
		"          ",
		"          ",
		"          ",
	},
	'x': {
		"      ",
		"__  __",
		"\\ \\/ /",
		" >  < ",
		"/_/\\_\\",
		"      ",
		"      ",
		"      ",
	},
	'y': {
		"       ",
		" _   _ ",
		"| | | |",
		"| |_| |",
		" \\__, |",
		" |___/ ",
		"       ",
		"       ",
	},
	'z': {
		"     ",
		" ____",
		"|_  /",
		" / / ",
		"/___|",
		"     ",
		"     ",
		"     ",
	},
	'{': {
		"   __",
		"  / /",
		" | | ",
		"< <  ",
		" | | ",
		"  \\_\\",
		"     ",
		"     ",
	},
	'|': {
		" _ ",
		"| |",
		"| |",
		"| |",
		"| |",
		"|_|",
		"   ",
		"   ",
	},
	'}': {
		"__   ",
		"\\ \\  ",
		" | | ",
		"  > >",
		" | | ",
		"/_/  ",
		"     ",
		"     ",
	},
	'~': {
		" /\\/| ",
		"|/\\/ ",
		"     ",
		"     ",
		"     ",
		"     ",
		"     ",
		"     ",
	},
}

// shadowBanner contient la dÃ©finition du banner shadow
var shadowBanner = map[rune][]string{
	' ': {
		"      ",
		"      ",
		"      ",
		"      ",
		"      ",
		"      ",
		"      ",
		"      ",
	},
	'!': {
		"   ",
		"_| ",
		"_| ",
		"_| ",
		"   ",
		"_| ",
		"   ",
		"   ",
	},
	'"': {
		"_|  _| ",
		"_|  _| ",
		"       ",
		"       ",
		"       ",
		"       ",
		"       ",
		"       ",
	},
	'#': {
		"           ",
		"  _|  _|   ",
		"_|_|_|_|_| ",
		"  _|  _|   ",
		"_|_|_|_|_| ",
		"  _|  _|   ",
		"           ",
		"           ",
	},
	'$': {
		"       ",
		"  _|   ",
		"_|_|_| ",
		"_|_|   ",
		"  _|_| ",
		"_|_|_| ",
		"  _|   ",
		"       ",
	},
	'%': {
		"           ",
		"_|_|    _| ",
		"_|_|  _|   ",
		"    _|     ",
		"  _|  _|_| ",
		"_|    _|_| ",
		"           ",
		"           ",
	},
	'&': {
		"           ",
		"  _|       ",
		"_|  _|     ",
		"  _|_|  _| ",
		"_|    _|   ",
		"  _|_|  _| ",
		"           ",
		"           ",
	},
	'\'': {
		"  _| ",
		"_|   ",
		"     ",
		"     ",
		"     ",
		"     ",
		"     ",
		"     ",
	},
	'(': {
		"  _| ",
		"_|   ",
		"_|   ",
		"_|   ",
		"_|   ",
		"_|   ",
		"  _| ",
		"     ",
	},
	')': {
		"_|   ",
		"  _| ",
		"  _| ",
		"  _| ",
		"  _| ",
		"  _| ",
		"_|   ",
		"     ",
	},
	'*': {
		"           ",
		"_|  _|  _| ",
		"  _|_|_|   ",
		"_|_|_|_|_| ",
		"  _|_|_|   ",
		"_|  _|  _| ",
		"           ",
		"           ",
	},
	'+': {
		"           ",
		"    _|     ",
		"    _|     ",
		"_|_|_|_|_| ",
		"    _|     ",
		"    _|     ",
		"           ",
		"           ",
	},
	',': {
		"     ",
		"     ",
		"     ",
		"     ",
		"     ",
		"  _| ",
		"_|   ",
		"     ",
	},
	'-': {
		"           ",
		"           ",
		"           ",
		"_|_|_|_|_| ",
		"           ",
		"           ",
		"           ",
		"           ",
	},
	'.': {
		"   ",
		"   ",
		"   ",
		"   ",
		"   ",
		"_| ",
		"   ",
		"   ",
	},
	'/': {
		"           ",
		"        _| ",
		"      _|   ",
		"    _|     ",
		"  _|       ",
		"_|         ",
		"           ",
		"           ",
	},
	'0': {
		"       ",
		"  _|   ",
		"_|  _| ",
		"_|  _| ",
		"_|  _| ",
		"  _|   ",
		"       ",
		"       ",
	},
	'1': {
		"     ",
		"  _| ",
		"_|_| ",
		"  _| ",
		"  _| ",
		"  _| ",
		"     ",
		"     ",
	},
	'2': {
		"         ",
		"  _|_|   ",
		"_|    _| ",
		"    _|   ",
		"  _|     ",
		"_|_|_|_| ",
		"         ",
		"         ",
	},
	'3': {
		"         ",
		"_|_|_|   ",
		"      _| ",
		"  _|_|   ",
		"      _| ",
		"_|_|_|   ",
		"         ",
		"         ",
	},
	'4': {
		"         ",
		"_|  _|   ",
		"_|  _|   ",
		"_|_|_|_| ",
		"    _|   ",
		"    _|   ",
		"         ",
		"         ",
	},
	'5': {
		"         ",
		"_|_|_|_| ",
		"_|       ",
		"_|_|_|   ",
		"      _| ",
		"_|_|_|   ",
		"         ",
		"         ",
	},
	'6': {
		"         ",
		"  _|_|_| ",
		"_|       ",
		"_|_|_|   ",
		"_|    _| ",
		"  _|_|   ",
		"         ",
		"         ",
	},
	'7': {
		"           ",
		"_|_|_|_|_| ",
		"        _| ",
		"      _|   ",
		"    _|     ",
		"  _|       ",
		"           ",
		"           ",
	},
	'8': {
		"         ",
		"  _|_|   ",
		"_|    _| ",
		"  _|_|   ",
		"_|    _| ",
		"  _|_|   ",
		"         ",
		"         ",
	},
	'9': {
		"         ",
		"  _|_|   ",
		"_|    _| ",
		"  _|_|_| ",
		"      _| ",
		"_|_|_|   ",
		"         ",
		"         ",
	},
	':': {
		"   ",
		"   ",
		"_| ",
		"   ",
		"   ",
		"_| ",
		"   ",
		"   ",
	},
	';': {
		"     ",
		"     ",
		"  _| ",
		"     ",
		"     ",
		"  _| ",
		"_|   ",
		"     ",
	},
	'<': {
		"       ",
		"    _| ",
		"  _|   ",
		"_|     ",
		"  _|   ",
		"    _| ",
		"       ",
		"       ",
	},
	'=': {
		"           ",
		"           ",
		"_|_|_|_|_| ",
		"           ",
		"_|_|_|_|_| ",
		"           ",
		"           ",
		"           ",
	},
	'>': {
		"       ",
		"_|     ",
		"  _|   ",
		"    _| ",
		"  _|   ",
		"_|     ",
		"       ",
		"       ",
	},
	'?': {
		"       ",
		"_|_|   ",
		"    _| ",
		"_|_|   ",
		"       ",
		"_|     ",
		"       ",
		"       ",
	},
	'@': {
		"                 ",
		"    _|_|_|_|_|   ",
		"  _|          _| ",
		"_|    _|_|_|  _| ",
		"_|  _|    _|  _| ",
		"_|    _|_|_|_|   ",
		"  _|             ",
		"    _|_|_|_|_|_| ",
	},
	'A': {
		"         ",
		"  _|_|   ",
		"_|    _| ",
		"_|_|_|_| ",
		"_|    _| ",
		"_|    _| ",
		"         ",
		"         ",
	},
	'B': {
		"         ",
		"_|_|_|   ",
		"_|    _| ",
		"_|_|_|   ",
		"_|    _| ",
		"_|_|_|   ",
		"         ",
		"         ",
	},
	'C': {
		"         ",
		"  _|_|_| ",
		"_|       ",
		"_|       ",
		"_|       ",
		"  _|_|_| ",
		"         ",
		"         ",
	},
	'D': {
		"         ",
		"_|_|_|   ",
		"_|    _| ",
		"_|    _| ",
		"_|    _| ",
		"_|_|_|   ",
		"         ",
		"         ",
	},
	'E': {
		"         ",
		"_|_|_|_| ",
		"_|       ",
		"_|_|_|   ",
		"_|       ",
		"_|_|_|_| ",
		"         ",
		"         ",
	},
	'F': {
		"         ",
		"_|_|_|_| ",
		"_|       ",
		"_|_|_|   ",
		"_|       ",
		"_|       ",
		"         ",
		"         ",
	},
	'G': {
		"         ",
		"  _|_|_| ",
		"_|       ",
		"_|  _|_| ",
		"_|    _| ",
		"  _|_|_| ",
		"         ",
		"         ",
	},
	'H': {
		"         ",
		"_|    _| ",
		"_|    _| ",
		"_|_|_|_| ",
		"_|    _| ",
		"_|    _| ",
		"         ",
		"         ",
	},
	'I': {
		"       ",
		"_|_|_| ",
		"  _|   ",
		"  _|   ",
		"  _|   ",
		"_|_|_| ",
		"       ",
		"       ",
	},
	'J': {
		"         ",
		"      _| ",
		"      _| ",
		"      _| ",
		"_|    _| ",
		"  _|_|   ",
		"         ",
		"         ",
	},
	'K': {
		"         ",
		"_|    _| ",
		"_|  _|   ",
		"_|_|     ",
		"_|  _|   ",
		"_|    _| ",
		"         ",
		"         ",
	},
	'L': {
		"         ",
		"_|       ",
		"_|       ",
		"_|       ",
		"_|       ",
		"_|_|_|_| ",
		"         ",
		"         ",
	},
	'M': {
		"           ",
		"_|      _| ",
		"_|_|  _|_| ",
		"_|  _|  _| ",
		"_|      _| ",
		"_|      _| ",
		"           ",
		"           ",
	},
	'N': {
		"           ",
		"_|      _| ",
		"_|_|    _| ",
		"_|  _|  _| ",
		"_|    _|_| ",
		"_|      _| ",
		"           ",
		"           ",
	},
	'O': {
		"         ",
		"  _|_|   ",
		"_|    _| ",
		"_|    _| ",
		"_|    _| ",
		"  _|_|   ",
		"         ",
		"         ",
	},
	'P': {
		"         ",
		"_|_|_|   ",
		"_|    _| ",
		"_|_|_|   ",
		"_|       ",
		"_|       ",
		"         ",
		"         ",
	},
	'Q': {
		"           ",
		"  _|_|     ",
		"_|    _|   ",
		"_|  _|_|   ",
		"_|    _|   ",
		"  _|_|  _| ",
		"           ",
		"           ",
	},
	'R': {
		"         ",
		"_|_|_|   ",
		"_|    _| ",
		"_|_|_|   ",
		"_|    _| ",
		"_|    _| ",
		"         ",
		"         ",
	},
	'S': {
		"         ",
		"  _|_|_| ",
		"_|       ",
		"  _|_|   ",
		"      _| ",
		"_|_|_|   ",
		"         ",
		"         ",
	},
	'T': {
		"           ",
		"_|_|_|_|_| ",
		"    _|     ",
		"    _|     ",
		"    _|     ",
		"    _|     ",
		"           ",
		"           ",
	},
	'U': {
		"         ",
		"_|    _| ",
		"_|    _| ",
		"_|    _| ",
		"_|    _| ",
		"  _|_|   ",
		"         ",
		"         ",
	},
	'V': {
		"           ",
		"_|      _| ",
		"_|      _| ",
		"_|      _| ",
		"  _|  _|   ",
		"    _|     ",
		"           ",
		"           ",
	},
	'W': {
		"               ",
		"_|          _| ",
		"_|          _| ",
		"_|    _|    _| ",
		"  _|  _|  _|   ",
		"    _|  _|     ",
		"               ",
		"               ",
	},
	'X': {
		"           ",
		"_|      _| ",
		"  _|  _|   ",
		"    _|     ",
		"  _|  _|   ",
		"_|      _| ",
		"           ",
		"           ",
	},
	'Y': {
		"           ",
		"_|      _| ",
		"  _|  _|   ",
		"    _|     ",
		"    _|     ",
		"    _|     ",
		"           ",
		"           ",
	},
	'Z': {
		"           ",
		"_|_|_|_|_| ",
		"      _|   ",
		"    _|     ",
		"  _|       ",
		"_|_|_|_|_| ",
		"           ",
		"           ",
	},
	'[': {
		"_|_| ",
		"_|   ",
		"_|   ",
		"_|   ",
		"_|   ",
		"_|   ",
		"_|_| ",
		"     ",
	},
	'\\': {
		"           ",
		"_|         ",
		"  _|       ",
		"    _|     ",
		"      _|   ",
		"        _| ",
		"           ",
		"           ",
	},
	']': {
		"_|_| ",
		"  _| ",
		"  _| ",
		"  _| ",
		"  _| ",
		"  _| ",
		"_|_| ",
		"     ",
	},
	'^': {
		"  _|   ",
		"_|  _| ",
		"       ",
		"       ",
		"       ",
		"       ",
		"       ",
		"       ",
	},
	'_': {
		"           ",
		"           ",
		"           ",
		"           ",
		"           ",
		"           ",
		"           ",
		"_|_|_|_|_| ",
	},
	'`': {
		"_|   ",
		"  _| ",
		"     ",
		"     ",
		"     ",
		"     ",
		"     ",
		"     ",
	},
	'a': {
		"         ",
		"         ",
		"  _|_|_| ",
		"_|    _| ",
		"_|    _| ",
		"  _|_|_| ",
		"         ",
		"         ",
	},
	'b': {
		"         ",
		"_|       ",
		"_|_|_|   ",
		"_|    _| ",
		"_|    _| ",
		"_|_|_|   ",
		"         ",
		"         ",
	},
	'c': {
		"         ",
		"         ",
		"  _|_|_| ",
		"_|       ",
		"_|       ",
		"  _|_|_| ",
		"         ",
		"         ",
	},
	'd': {
		"         ",
		"      _| ",
		"  _|_|_| ",
		"_|    _| ",
		"_|    _| ",
		"  _|_|_| ",
		"         ",
		"         ",
	},
	'e': {
		"         ",
		"         ",
		"  _|_|   ",
		"_|_|_|_| ",
		"_|       ",
		"  _|_|_| ",
		"         ",
		"         ",
	},
	'f': {
		"         ",
		"    _|_| ",
		"  _|     ",
		"_|_|_|_| ",
		"  _|     ",
		"  _|     ",
		"         ",
		"         ",
	},
	'g': {
		"         ",
		"         ",
		"  _|_|_| ",
		"_|    _| ",
		"_|    _| ",
		"  _|_|_| ",
		"      _| ",
		"  _|_|   ",
	},
	'h': {
		"         ",
		"_|       ",
		"_|_|_|   ",
		"_|    _| ",
		"_|    _| ",
		"_|    _| ",
		"         ",
		"         ",
	},
	'i': {
		"   ",
		"_| ",
		"   ",
		"_| ",
		"_| ",
		"_| ",
		"   ",
		"   ",
	},
	'j': {
		"     ",
		"  _| ",
		"     ",
		"  _| ",
		"  _| ",
		"  _| ",
		"  _| ",
		"_|   ",
	},
	'k': {
		"         ",
		"_|       ",
		"_|  _|   ",
		"_|_|     ",
		"_|  _|   ",
		"_|    _| ",
		"         ",
		"         ",
	},
	'l': {
		"   ",
		"_| ",
		"_| ",
		"_| ",
		"_| ",
		"_| ",
		"   ",
		"   ",
	},
	'm': {
		"               ",
		"               ",
		"_|_|_|  _|_|   ",
		"_|    _|    _| ",
		"_|    _|    _| ",
		"_|    _|    _| ",
		"               ",
		"               ",
	},
	'n': {
		"         ",
		"         ",
		"_|_|_|   ",
		"_|    _| ",
		"_|    _| ",
		"_|    _| ",
		"         ",
		"         ",
	},
	'o': {
		"         ",
		"         ",
		"  _|_|   ",
		"_|    _| ",
		"_|    _| ",
		"  _|_|   ",
		"         ",
		"         ",
	},
	'p': {
		"         ",
		"         ",
		"_|_|_|   ",
		"_|    _| ",
		"_|    _| ",
		"_|_|_|   ",
		"_|       ",
		"_|       ",
	},
	'q': {
		"         ",
		"         ",
		"  _|_|_| ",
		"_|    _| ",
		"_|    _| ",
		"  _|_|_| ",
		"      _| ",
		"      _| ",
	},
	'r': {
		"         ",
		"         ",
		"_|  _|_| ",
		"_|_|     ",
		"_|       ",
		"_|       ",
		"         ",
		"         ",
	},
	's': {
		"         ",
		"         ",
		"  _|_|_| ",
		"_|_|     ",
		"    _|_| ",
		"_|_|_|   ",
		"         ",
		"         ",
	},
	't': {
		"         ",
		"  _|     ",
		"_|_|_|_| ",
		"  _|     ",
		"  _|     ",
		"    _|_| ",
		"         ",
		"         ",
	},
	'u': {
		"         ",
		"         ",
		"_|    _| ",
		"_|    _| ",
		"_|    _| ",
		"  _|_|_| ",
		"         ",
		"         ",
	},
	'v': {
		"           ",
		"           ",
		"_|      _| ",
		"_|      _| ",
		"  _|  _|   ",
		"    _|     ",
		"           ",
		"           ",
	},
	'w': {
		"                   ",
		"                   ",
		"_|      _|      _| ",
		"_|      _|      _| ",
		"  _|  _|  _|  _|   ",
		"    _|      _|     ",
		"                   ",
		"                   ",
	},
	'x': {
		"         ",
		"         ",
		"_|    _| ",
		"  _|_|   ",
		"_|    _| ",
		"_|    _| ",
		"         ",
		"         ",
	},
	'y': {
		"         ",
		"         ",
		"_|    _| ",
		"_|    _| ",
		"_|    _| ",
		"  _|_|_| ",
		"      _| ",
		"  _|_|   ",
	},
	'z': {
		"         ",
		"         ",
		"_|_|_|_| ",
		"    _|   ",
		"  _|     ",
		"_|_|_|_| ",
		"         ",
		"         ",
	},
	'{': {
		"    _| ",
		"  _|   ",
		"  _|   ",
		"_|     ",
		"  _|   ",
		"  _|   ",
		"    _| ",
		"       ",
	},
	'|': {
		"_| ",
		"_| ",
		"_| ",
		"_| ",
		"_| ",
		"_| ",
		"_| ",
		"_| ",
	},
	'}': {
		"_|     ",
		"  _|   ",
		"  _|   ",
		"    _| ",
		"  _|   ",
		"  _|   ",
		"_|     ",
		"       ",
	},
	'~': {
		"  _|  _| ",
		"_|  _|   ",
		"         ",
		"         ",
		"         ",
		"         ",
		"         ",
		"         ",
	},
}

// thinkertoyBanner contient la dÃ©finition du banner thinkertoy
var thinkertoyBanner = map[rune][]string{
	' ': {
		"      ",
		"      ",
		"      ",
		"      ",
		"      ",
		"      ",
		"      ",
		"      ",
	},
	'!': {
		"  ",
		"o ",
		"| ",
		"o ",
		"  ",
		"O ",
		"  ",
		"  ",
	},
	'"': {
		"o o ",
		"| | ",
		"    ",
		"    ",
		"    ",
		"    ",
		"    ",
		"    ",
	},
	'#': {
		"      ",
		" | |  ",
		"-O-O- ",
		" | |  ",
		"-O-O- ",
		" | |  ",
		"      ",
		"      ",
	},
	'$': {
		"  | |   ",
		" -O-O-  ",
		"o | |   ",
		" -O-O-  ",
		"  | | o ",
		" -O-O-  ",
		"  | |   ",
		"        ",
	},
	'%': {
		"      ",
		"    O ",
		"o  /  ",
		"  /   ",
		" /  o ",
		"O     ",
		"      ",
		"      ",
	},
	'&': {
		"     ",
		"     ",
		"  o  ",
		" /|  ",
		"o-O- ",
		"  |  ",
		"     ",
		"     ",
	},
	'\'': {
		"o ",
		"| ",
		"  ",
		"  ",
		"  ",
		"  ",
		"  ",
		"  ",
	},
	'(': {
		"   ",
		" / ",
		"o  ",
		"|  ",
		"o  ",
		" \\ ",
		"   ",
		"   ",
	},
	')': {
		"   ",
		"\\  ",
		" o ",
		" | ",
		" o ",
		"/  ",
		"   ",
		"   ",
	},
	'*': {
		"      ",
		"o | o ",
		" \\|/  ",
		"--O-- ",
		" /|\\  ",
		"o | o ",
		"      ",
		"      ",
	},
	'+': {
		"    ",
		"    ",
		" |  ",
		"-o- ",
		" |  ",
		"    ",
		"    ",
		"    ",
	},
	',': {
		"  ",
		"  ",
		"  ",
		"  ",
		"  ",
		"o ",
		"| ",
		"  ",
	},
	'-': {
		"    ",
		"    ",
		"    ",
		"    ",
		"o-o ",
		"    ",
		"    ",
		"    ",
	},
	'.': {
		"  ",
		"  ",
		"  ",
		"  ",
		"  ",
		"O ",
		"  ",
		"  ",
	},
	'/': {
		"      ",
		"    o ",
		"   /  ",
		"  o   ",
		" /    ",
		"o     ",
		"      ",
		"      ",
	},
	'0': {
		"      ",
		" o-o  ",
		"o  /o ",
		"| / | ",
		"o/  o ",
		" o-o  ",
		"      ",
		"      ",
	},
	'1': {
		"      ",
		"  0   ",
		" /|   ",
		"o |   ",
		"  |   ",
		"o-o-o ",
		"      ",
		"      ",
	},
	'2': {
		"     ",
		" --  ",
		"o  o ",
		"  /  ",
		" /   ",
		"o--o ",
		"     ",
		"     ",
	},
	'3': {
		"     ",
		"o-o  ",
		"   | ",
		" oo  ",
		"   | ",
		"o-o  ",
		"     ",
		"     ",
	},
	'4': {
		"     ",
		"o  o ",
		"|  | ",
		"o--O ",
		"   | ",
		"   o ",
		"     ",
		"     ",
	},
	'5': {
		"     ",
		"o--o ",
		"|    ",
		"o-o  ",
		"   | ",
		"o-o  ",
		"     ",
		"     ",
	},
	'6': {
		"      ",
		"  o   ",
		" /    ",
		"O--o  ",
		"o   | ",
		" o-o  ",
		"      ",
		"      ",
	},
	'7': {
		"      ",
		"o---o ",
		"   /  ",
		"  o   ",
		"  |   ",
		"  o   ",
		"      ",
		"      ",
	},
	'8': {
		"      ",
		" o-o  ",
		"|   | ",
		" o-o  ",
		"|   | ",
		" o-o  ",
		"      ",
		"      ",
	},
	'9': {
		"      ",
		" o-o  ",
		"|   o ",
		" o--O ",
		"   /  ",
		"  o   ",
		"      ",
		"      ",
	},
	':': {
		"  ",
		"  ",
		"O ",
		"  ",
		"O ",
		"  ",
		"  ",
		"  ",
	},
	';': {
		"  ",
		"  ",
		"o ",
		"  ",
		"o ",
		"| ",
		"  ",
		"  ",
	},
	'<': {
		"    ",
		"  o ",
		" /  ",
		"O   ",
		" \\  ",
		"  o ",
		"    ",
		"    ",
	},
	'=': {
		"     ",
		"     ",
		"     ",
		"o--o ",
		"o--o ",
		"     ",
		"     ",
		"     ",
	},
	'>': {
		"    ",
		"o   ",
		" \\  ",
		"  O ",
		" /  ",
		"o   ",
		"    ",
		"    ",
	},
	'?': {
		"      ",
		" o-o  ",
		"o   o ",
		"   /  ",
		"  o   ",
		"      ",
		"  O   ",
		"      ",
	},
	'@': {
		"      ",
		"  o   ",
		" / \\  ",
		"o O-o ",
		" \\    ",
		"  o-  ",
		"      ",
		"      ",
	},
	'A': {
		"      ",
		"  O   ",
		" / \\  ",
		"o---o ",
		"|   | ",
		"o   o ",
		"      ",
		"      ",
	},
	'B': {
		"      ",
		"o--o  ",
		"|   | ",
		"O--o  ",
		"|   | ",
		"o--o  ",
		"      ",
		"      ",
	},
	'C': {
		"      ",
		"  o-o ",
		" /    ",
		"O     ",
		" \\    ",
		"  o-o ",
		"      ",
		"      ",
	},
	'D': {
		"      ",
		"o-o   ",
		"|  \\  ",
		"|   O ",
		"|  /  ",
		"o-o   ",
		"      ",
		"      ",
	},
	'E': {
		"     ",
		"o--o ",
		"|    ",
		"O-o  ",
		"|    ",
		"o--o ",
		"     ",
		"     ",
	},
	'F': {
		"     ",
		"o--o ",
		"|    ",
		"O-o  ",
		"|    ",
		"o    ",
		"     ",
		"     ",
	},
	'G': {
		"      ",
		" o-o  ",
		"o     ",
		"|  -o ",
		"o   | ",
		" o-o  ",
		"      ",
		"      ",
	},
	'H': {
		"     ",
		"o  o ",
		"|  | ",
		"O--O ",
		"|  | ",
		"o  o ",
		"     ",
		"     ",
	},
	'I': {
		"      ",
		"o-O-o ",
		"  |   ",
		"  |   ",
		"  |   ",
		"o-O-o ",
		"      ",
		"      ",
	},
	'J': {
		"      ",
		"    o ",
		"    | ",
		"    | ",
		"\\   o ",
		" o-o  ",
		"      ",
		"      ",
	},
	'K': {
		"     ",
		"o  o ",
		"| /  ",
		"OO   ",
		"| \\  ",
		"o  o ",
		"     ",
		"     ",
	},
	'L': {
		"      ",
		"o     ",
		"|     ",
		"|     ",
		"|     ",
		"O---o ",
		"      ",
		"      ",
	},
	'M': {
		"      ",
		"o   o ",
		"|\\ /| ",
		"| O | ",
		"|   | ",
		"o   o ",
		"      ",
		"      ",
	},
	'N': {
		"      ",
		"o   o ",
		"|\\  | ",
		"| \\ | ",
		"|  \\| ",
		"o   o ",
		"      ",
		"      ",
	},
	'O': {
		"      ",
		" o-o  ",
		"o   o ",
		"|   | ",
		"o   o ",
		" o-o  ",
		"      ",
		"      ",
	},
	'P': {
		"      ",
		"o--o  ",
		"|   | ",
		"O--o  ",
		"|     ",
		"o     ",
		"      ",
		"      ",
	},
	'Q': {
		"      ",
		" o-o  ",
		"o   o ",
		"|   | ",
		"o   O ",
		" o-O\\ ",
		"      ",
		"      ",
	},
	'R': {
		"      ",
		"o--o  ",
		"|   | ",
		"O-Oo  ",
		"|  \\  ",
		"o   o ",
		"      ",
		"      ",
	},
	'S': {
		"      ",
		" o-o  ",
		"|     ",
		" o-o  ",
		"    | ",
		"o--o  ",
		"      ",
		"      ",
	},
	'T': {
		"      ",
		"o-O-o ",
		"  |   ",
		"  |   ",
		"  |   ",
		"  o   ",
		"      ",
		"      ",
	},
	'U': {
		"      ",
		"o   o ",
		"|   | ",
		"|   | ",
		"|   | ",
		" o-o  ",
		"      ",
		"      ",
	},
	'V': {
		"      ",
		"o   o ",
		"|   | ",
		"o   o ",
		" \\ /  ",
		"  o   ",
		"      ",
		"      ",
	},
	'W': {
		"          ",
		"o       o ",
		"|       | ",
		"o   o   o ",
		" \\ / \\ /  ",
		"  o   o   ",
		"          ",
		"          ",
	},
	'X': {
		"      ",
		"o   o ",
		" \\ /  ",
		"  O   ",
		" / \\  ",
		"o   o ",
		"      ",
		"      ",
	},
	'Y': {
		"      ",
		"o   o ",
		" \\ /  ",
		"  O   ",
		"  |   ",
		"  o   ",
		"      ",
		"      ",
	},
	'Z': {
		"      ",
		"o---o ",
		"   /  ",
		" -O-  ",
		" /    ",
		"o---o ",
		"      ",
		"      ",
	},
	'[': {
		"    ",
		"O-o ",
		"|   ",
		"|   ",
		"|   ",
		"O-o ",
		"    ",
		"    ",
	},
	'\\': {
		"      ",
		"o     ",
		" \\    ",
		"  o   ",
		"   \\  ",
		"    o ",
		"      ",
		"      ",
	},
	']': {
		"    ",
		"o-O ",
		"  | ",
		"  | ",
		"  | ",
		"o-O ",
		"    ",
		"    ",
	},
	'^': {
		"    ",
		" o  ",
		"/ \\ ",
		"    ",
		"    ",
		"    ",
		"    ",
		"    ",
	},
	'_': {
		"      ",
		"      ",
		"      ",
		"      ",
		"      ",
		"o---o ",
		"      ",
		"      ",
	},
	'`': {
		"  ",
		"0 ",
		"| ",
		"  ",
		"  ",
		"  ",
		"  ",
		"  ",
	},
	'a': {
		"     ",
		"     ",
		"     ",
		" oo  ",
		"| |  ",
		"o-o- ",
		"     ",
		"     ",
	},
	'b': {
		"     ",
		"o    ",
		"|    ",
		"O-o  ",
		"|  | ",
		"o-o  ",
		"     ",
		"     ",
	},
	'c': {
		"     ",
		"     ",
		"     ",
		" o-o ",
		"|    ",
		" o-o ",
		"     ",
		"     ",
	},
	'd': {
		"     ",
		"   o ",
		"   | ",
		" o-O ",
		"|  | ",
		" o-o ",
		"     ",
		"     ",
	},
	'e': {
		"    ",
		"    ",
		"    ",
		"o-o ",
		"|-' ",
		"o-o ",
		"    ",
		"    ",
	},
	'f': {
		"     ",
		" o-o ",
		" |   ",
		"-O-  ",
		" |   ",
		" o   ",
		"     ",
		"     ",
	},
	'g': {
		"     ",
		"     ",
		"     ",
		"o--o ",
		"|  | ",
		"o--O ",
		"   | ",
		"o--o ",
	},
	'h': {
		"     ",
		"o    ",
		"|    ",
		"O--o ",
		"|  | ",
		"o  o ",
		"     ",
		"     ",
	},
	'i': {
		"  ",
		"  ",
		"o ",
		"  ",
		"| ",
		"| ",
		"  ",
		"  ",
	},
	'j': {
		"      ",
		"      ",
		"    o ",
		"      ",
		"    o ",
		"    | ",
		"o   o ",
		" o-o  ",
	},
	'k': {
		"     ",
		"o    ",
		"| /  ",
		"OO   ",
		"| \\  ",
		"o  o ",
		"     ",
		"     ",
	},
	'l': {
		"  ",
		"o ",
		"| ",
		"| ",
		"| ",
		"o ",
		"  ",
		"  ",
	},
	'm': {
		"      ",
		"      ",
		"      ",
		"o-O-o ",
		"| | | ",
		"o o o ",
		"      ",
		"      ",
	},
	'n': {
		"     ",
		"     ",
		"     ",
		"o-o  ",
		"|  | ",
		"o  o ",
		"     ",
		"     ",
	},
	'o': {
		"    ",
		"    ",
		"    ",
		"o-o ",
		"| | ",
		"o-o ",
		"    ",
		"    ",
	},
	'p': {
		"     ",
		"     ",
		"     ",
		"o-o  ",
		"|  | ",
		"O-o  ",
		"|    ",
		"o    ",
	},
	'q': {
		"     ",
		"     ",
		"     ",
		" o-o ",
		"|  | ",
		" o-O ",
		"   | ",
		"   o ",
	},
	'r': {
		"    ",
		"    ",
		"    ",
		"o-o ",
		"|   ",
		"o   ",
		"    ",
		"    ",
	},
	's': {
		"    ",
		"    ",
		"    ",
		"o-o ",
		" \\  ",
		"o-o ",
		"    ",
		"    ",
	},
	't': {
		"    ",
		" o  ",
		" |  ",
		"-o- ",
		" |  ",
		" o  ",
		"    ",
		"    ",
	},
	'u': {
		"     ",
		"     ",
		"     ",
		"o  o ",
		"|  | ",
		"o--o ",
		"     ",
		"     ",
	},
	'v': {
		"      ",
		"      ",
		"      ",
		"o   o ",
		" \\ /  ",
		"  o   ",
		"      ",
		"      ",
	},
	'w': {
		"          ",
		"          ",
		"          ",
		"o   o   o ",
		" \\ / \\ /  ",
		"  o   o   ",
		"          ",
		"          ",
	},
	'x': {
		"    ",
		"    ",
		"    ",
		"\\ / ",
		" o  ",
		"/ \\ ",
		"    ",
		"    ",
	},
	'y': {
		"     ",
		"     ",
		"     ",
		"o  o ",
		"|  | ",
		"o--O ",
		"   | ",
		"o--o ",
	},
	'z': {
		"    ",
		"    ",
		"    ",
		"o-o ",
		" /  ",
		"o-o ",
		"    ",
		"    ",
	},
	'{': {
		"      ",
		"  o-o ",
		"  |   ",
		"o-O   ",
		"  |   ",
		"  o-o ",
		"      ",
		"      ",
	},
	'|': {
		"  ",
		"o ",
		"| ",
		"o ",
		"| ",
		"o ",
		"  ",
		"  ",
	},
	'}': {
		"      ",
		"o-o   ",
		"  |   ",
		"  O-o ",
		"  |   ",
		"o-o   ",
		"      ",
		"      ",
	},
	'~': {
		" o_ / ",
		"/  o  ",
		"      ",
		"      ",
		"      ",
		"      ",
		"      ",
		"      ",
	},
}

// generateAsciiArt gÃ©nÃ¨re l'art ASCII Ã  partir du texte et du banner
func generateAsciiArt(text string, banner map[rune][]string) string {
	if len(text) == 0 {
		return ""
	}
	
	lines := strings.Split(text, "\\n")
	var result []string
	
	for _, line := range lines {
		if len(line) == 0 {
			result = append(result, "")
			continue
		}
		
		// Pour chaque ligne de hauteur ASCII (8 lignes)
		for i := 0; i < 8; i++ {
			var lineBuilder strings.Builder
			for _, char := range line {
				if patterns, exists := banner[char]; exists {
					lineBuilder.WriteString(patterns[i])
				} else {
					// Utiliser l'espace pour les caractÃ¨res non supportÃ©s
					lineBuilder.WriteString(banner[' '][i])
				}
			}
			result = append(result, lineBuilder.String())
		}
	}
	
	return strings.Join(result, "\n")
}

// Handler principal pour Vercel
func Handler(w http.ResponseWriter, r *http.Request) {
	if r.Method == "POST" {
		text := r.FormValue("text")
		bannerType := r.FormValue("banner")
		color := r.FormValue("color")
		
		if color == "" {
			color = "default"
		}
		
		var banner map[rune][]string
		switch bannerType {
		case "shadow":
			banner = shadowBanner
		case "thinkertoy":
			banner = thinkertoyBanner
		default:
			banner = standardBanner
		}
		
		asciiArt := generateAsciiArt(text, banner)
		
		// Retourner le HTML complet avec l'art ASCII
		w.Header().Set("Content-Type", "text/html")
		fmt.Fprint(w, generateHTML(asciiArt, color, text, bannerType))
		return
	}
	
	// Pour GET, retourner le formulaire
	w.Header().Set("Content-Type", "text/html")
	fmt.Fprint(w, generateHTML("", "default", "", "standard"))
}

// generateHTML gÃ©nÃ¨re le HTML complet de la page
func generateHTML(asciiArt, color, inputText, selectedBanner string) string {
	colorClass := "ascii-" + color
	if color == "default" {
		colorClass = "ascii-default"
	}
	
	return fmt.Sprintf(`<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ASCII Art Web Generator</title>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=League+Spartan:wght@100..900&family=Orbitron:wght@400;700;900&display=swap');
        
        @keyframes FadeIn {
            from {opacity: 0;}
            to {opacity: 1;}
        }
        
        @keyframes rainbow-animation {
            0%%, 100%% {
                background-position: 0%% 50%%;
            }
            50%% {
                background-position: 100%% 50%%;
            }
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        .typo {
            font-family: 'League Spartan', sans-serif;
            letter-spacing: .2rem;
            text-decoration: none;
            color: black;
        }
        
        .shadowed-in {
            box-shadow: 
                0 2px 5px 0 rgba(255,255,255,.7), 
                0 4px 8px 0 rgba(255,255,255,.5),
                inset 0 2px 7px 0 rgba(0,0,0,.3), 
                inset 0 4px 10px 0 rgba(0,0,0,.2);
        }
        
        .shadowed-out {
            box-shadow: 0 2px 7px 0 rgba(0,0,0,.3), 
                0 4px 10px 0 rgba(0,0,0,.2),
                0 -2px 7px 0 rgba(255,255,255,.3), 
                0 -4px 10px 0 rgba(255,255,255,.2);
        }
        
        .deg {
            background: linear-gradient(to bottom,
                rgba(255,255,255,.6) 0%%,
                rgba(255,255,255,.6) 85%%,
                rgba(224,224,224,.5) 100%%);
        }
        
        body {
            /* Gradient Kanagawa inspirÃ© */
            background: linear-gradient(135deg, 
                #1f1f28 0%%, 
                #2a2a37 15%%, 
                #363646 30%%, 
                #54546d 45%%, 
                #727169 60%%, 
                #c8c093 75%%, 
                #dcd7ba 90%%, 
                #e6c384 100%%);
            background-attachment: fixed;
            margin: 0;
            padding: 0;
            width: 100vw;
            min-height: 100vh;
            position: relative;
            overflow-x: hidden;
        }
        
        /* Effet de particules */
        body::before {
            content: '';
            position: fixed;
            top: 0;
            left: 0;
            width: 100%%;
            height: 100%%;
            background: 
                radial-gradient(circle at 20%% 80%%, rgba(120, 119, 198, 0.3) 0%%, transparent 50%%),
                radial-gradient(circle at 80%% 20%%, rgba(255, 160, 102, 0.3) 0%%, transparent 50%%),
                radial-gradient(circle at 40%% 40%%, rgba(147, 153, 178, 0.2) 0%%, transparent 50%%);
            pointer-events: none;
            z-index: 0;
        }
        
        header, main, footer {
            width: 100%%;
            position: relative;
            display: flex;
            padding: 2vh;
            z-index: 2;
        }
        
        header {
            height: 44vh;
            z-index: 10;
        }
        
        main {
            height: 52vh;
            padding: 3vh 8vh;
            display: flex;
            justify-content: start;
            align-items: center;
        }
        
        footer {
            height: 4vh;
            padding: 1vh;
            font-size: .8rem;
            font-style: italic;
            letter-spacing: .3rem;
            display: flex;
            justify-content: center;
            align-items: center;
        }
        
        header section:first-child {
            width: 55vw;
        }
        
        header section:last-child {
            width: 45vw;
            display: flex;
            padding: 2vh;
        }
        
        nav {
            position: relative;
            width: 50vw;
            max-width: 500px;
            height: fit-content;
            max-height: 40vh;
            margin: auto;
            padding: 2vh 0;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            border-radius: 20px;
            z-index: 10;
        }
        
        #logo {
            width: 100%%;
            height: fit-content;
            max-height: 100px;
            margin-bottom: 1rem;
            display: flex;
            justify-content: center;
            opacity: .9;
        }
        
        #logo p {
            font-family: 'Orbitron', monospace;
            font-size: 1.8rem;
            font-weight: 700;
            text-transform: uppercase;
            letter-spacing: .8rem;
            color: #c8c093;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.5);
            text-align: center;
        }
        
        form {
            width: 100%%;
            height: fit-content;
            min-height: 50%%;
        }
        
        #editor {
            padding: 30px 30px 20px 30px;
            margin: 0;
            border-radius: 30px;
            background: linear-gradient(to bottom,
                rgba(255,255,255,.8) 0%%,
                rgba(255,255,255,.7) 85%%,
                rgba(224,224,224,.6) 100%%);
            backdrop-filter: blur(10px);
        }
        
        form label {
            font-size: 1rem;
            color: #2a2a37;
            font-weight: 600;
        }
        
        form textarea {
            background-color: rgba(255, 255, 255, .7);
            width: 100%%;
            height: 10vh;
            min-height: 50px;
            padding: .8rem;
            resize: none;
            overflow: auto;
            border: solid 2px rgba(42, 42, 55, .3);
            border-radius: 10px;
            font-family: 'Orbitron', monospace;
            font-size: 1rem;
        }
        
        form textarea:focus {
            outline: none;
            border-color: rgba(120, 119, 198, .8);
            box-shadow: 0 0 10px rgba(120, 119, 198, .3);
        }
        
        #editor div:last-child {
            width: 100%%;
            height: fit-content;
            padding: 0;
            display: flex;
            justify-content: flex-start;
            align-items: center;
            gap: 1rem;
            margin-top: 1rem;
        }
        
        select {
            background-color: rgba(255, 255, 255, .7);
            padding: .8rem;
            font-size: 1rem;
            border: solid 2px rgba(42, 42, 55, .3);
            border-radius: 10px;
            color: #2a2a37;
            font-family: 'League Spartan', sans-serif;
        }
        
        select:focus {
            outline: none;
            border-color: rgba(120, 119, 198, .8);
            box-shadow: 0 0 10px rgba(120, 119, 198, .3);
        }
        
        option {
            background-color: rgba(255, 255, 255, .9);
            color: #2a2a37;
            font-size: 1rem;
        }
        
        form div:last-child {
            padding: 0 0 1rem 0;
            display: flex;
            gap: 1rem;
            justify-content: space-between;
            z-index: 3;
        }
        
        button {
            background: linear-gradient(145deg, rgba(120, 119, 198, 0.8), rgba(147, 153, 178, 0.8));
            color: white;
            border: none;
            padding: 12px 24px;
            border-radius: 15px;
            cursor: pointer;
            font-family: 'League Spartan', sans-serif;
            font-size: 1rem;
            font-weight: 600;
            letter-spacing: .1rem;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(120, 119, 198, 0.3);
        }
        
        button:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(120, 119, 198, 0.4);
            background: linear-gradient(145deg, rgba(120, 119, 198, 1), rgba(147, 153, 178, 1));
        }
        
        button:active {
            transform: translateY(0);
        }
        
        /* Classes de couleur pour l'ASCII art */
        .ascii-red {
            color: #ff4444;
            text-shadow: 0 0 10px rgba(255, 68, 68, 0.5);
        }
        
        .ascii-blue {
            color: #4488ff;
            text-shadow: 0 0 10px rgba(68, 136, 255, 0.5);
        }
        
        .ascii-green {
            color: #44ff44;
            text-shadow: 0 0 10px rgba(68, 255, 68, 0.5);
        }
        
        .ascii-yellow {
            color: #ffff44;
            text-shadow: 0 0 10px rgba(255, 255, 68, 0.5);
        }
        
        .ascii-purple {
            color: #ff44ff;
            text-shadow: 0 0 10px rgba(255, 68, 255, 0.5);
        }
        
        .ascii-cyan {
            color: #44ffff;
            text-shadow: 0 0 10px rgba(68, 255, 255, 0.5);
        }
        
        .ascii-orange {
            color: #ff8844;
            text-shadow: 0 0 10px rgba(255, 136, 68, 0.5);
        }
        
        .ascii-pink {
            color: #ff88cc;
            text-shadow: 0 0 10px rgba(255, 136, 204, 0.5);
        }
        
        .ascii-rainbow {
            background: linear-gradient(
                45deg,
                #ff0000, #ff7f00, #ffff00, #00ff00,
                #0000ff, #4b0082, #9400d3, #ff0000
            );
            background-size: 800%% 800%%;
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            animation: rainbow-animation 3s ease-in-out infinite;
        }
        
        .ascii-default {
            color: #2a2a37;
        }
        
        #display {
            width: fit-content;
            height: fit-content;
            max-width: 100%%;
            max-height: 100%%;
            border-radius: 30px;
            overflow: auto;
            background: linear-gradient(to bottom,
                rgba(255,255,255,.8) 0%%,
                rgba(255,255,255,.7) 85%%,
                rgba(224,224,224,.6) 100%%);
            backdrop-filter: blur(10px);
            animation: FadeIn .7s ease-in-out;
            z-index: 0;
        }
        
        #display::-webkit-scrollbar {
            width: 8px;
            height: 8px;
        }
        
        #display::-webkit-scrollbar-track {
            background: rgba(255, 255, 255, 0);
        }
        
        #display::-webkit-scrollbar-thumb {
            background-color: rgba(42, 42, 55, .4);
            border-radius: 6px;
            border: 1px solid rgba(120, 119, 198, .3);
        }
        
        #display::-webkit-scrollbar-thumb:hover {
            background-color: rgba(42, 42, 55, .7);
            cursor: pointer;
        }
        
        #display::-webkit-scrollbar-button {
            width: 0;    
            height: 0;
        }
        
        #display::-webkit-scrollbar-corner {
            background: rgba(240, 240, 240, 0);
        }
        
        #display pre {
            padding: 2vh;
            font-weight: bolder;
            font-family: 'Courier New', monospace;
            font-size: clamp(0.8rem, 1.2vw, 1rem);
            line-height: 1;
            white-space: pre;
            overflow-x: auto;
        }
        
        @media screen and (max-width: 900px) {
            body {
                overflow-y: auto;
            }
            
            header section:first-child {
                display: none;
            }
            
            header section:last-child {
                width: 100%%;
            }
            
            nav {
                width: 100%%;
                max-width: 500px;
                min-width: 100px;
                max-height: 40vh;
            }
            
            main {
                padding: 4vh;
            }
            
            footer {
                padding: 0 4vh;
                justify-content: end;
                align-items: end;
            }
            
            #display pre {
                font-size: clamp(0.6rem, 2.5vw, 0.8rem);
            }
        }
        
        .footer-text {
            color: rgba(200, 192, 147, 0.8);
            text-shadow: 1px 1px 2px rgba(0,0,0,0.3);
        }
    </style>
</head>
<body>
    <header>
        <section></section>
        <section>
            <nav class="shadowed-in deg">
                <div id="logo">
                    <p>ASCII Art Web</p>
                </div>
                <form method="POST" id="editor">
                    <label for="text" class="typo">Tapez votre texte ici :</label>
                    <textarea name="text" id="text" placeholder="Entrez votre texte..." class="typo">%s</textarea>
                    
                    <div>
                        <select name="banner" class="typo">
                            <option value="standard" %s>Standard</option>
                            <option value="shadow" %s>Shadow</option>
                            <option value="thinkertoy" %s>Thinkertoy</option>
                        </select>
                        
                        <select name="color" class="typo">
                            <option value="default" %s>Noir</option>
                            <option value="red" %s>Rouge</option>
                            <option value="blue" %s>Bleu</option>
                            <option value="green" %s>Vert</option>
                            <option value="yellow" %s>Jaune</option>
                            <option value="purple" %s>Violet</option>
                            <option value="cyan" %s>Cyan</option>
                            <option value="orange" %s>Orange</option>
                            <option value="pink" %s>Rose</option>
                            <option value="rainbow" %s>Arc-en-ciel</option>
                        </select>
                    </div>
                    
                    <div>
                        <button type="submit" class="typo">GÃ©nÃ©rer ASCII Art</button>
                        <button type="button" onclick="resetForm()" class="typo">Reset</button>
                    </div>
                </form>
            </nav>
        </section>
    </header>

    <main>
        <div id="display" class="shadowed-out deg">
            <pre class="%s">%s</pre>
        </div>
    </main>

    <footer>
        <p class="typo footer-text">ASCII Art Web Generator - Thibaud Masurel Â© 2024</p>
    </footer>

    <script>
        function resetForm() {
            document.getElementById('text').value = '';
            document.querySelector('select[name="banner"]').value = 'standard';
            document.querySelector('select[name="color"]').value = 'default';
            document.querySelector('#display pre').textContent = '';
        }

        // Auto-submit on enter (Ctrl+Enter)
        document.getElementById('text').addEventListener('keydown', function(e) {
            if (e.ctrlKey && e.key === 'Enter') {
                document.querySelector('form').submit();
            }
        });
    </script>
</body>
</html>`,
		html.EscapeString(inputText),
		getSelected(selectedBanner, "standard"),
		getSelected(selectedBanner, "shadow"),
		getSelected(selectedBanner, "thinkertoy"),
		getSelected(color, "default"),
		getSelected(color, "red"),
		getSelected(color, "blue"),
		getSelected(color, "green"),
		getSelected(color, "yellow"),
		getSelected(color, "purple"),
		getSelected(color, "cyan"),
		getSelected(color, "orange"),
		getSelected(color, "pink"),
		getSelected(color, "rainbow"),
		colorClass,
		html.EscapeString(asciiArt))
}

// getSelected retourne "selected" si la valeur correspond, sinon une chaÃ®ne vide
func getSelected(current, target string) string {
	if current == target {
		return "selected"
	}
	return ""
}